# 第二节 PHP中的内存管理

在前面的小节中我们介绍了内存管理一般会包括以下内容：

1. 是否有足够的内存供我们的程序使用；
1. 如何从足够可用的内存中获取部分内存；
1. 对于使用后的内存，是否可以将其销毁并将其重新分配给其它程序使用。

与此对应，PHP的内容管理也包含这样的内容，只是这些内容在ZEND内核中是以宏的形式提供给外部使用。
PHP的内存管理是分层（hierarchical）的。它可以分为三层：存储层（storage）、堆层（heap）和接口层（emalloc/efree）。
存储层通过 malloc()、mmap() 等函数向系统真正的申请内存，并通过 free() 函数释放所申请的内存。
存储层通常申请的内存块都比较大，这里申请的内存大并不是指storage层结构所需要的内存大，
只是堆层通过调用存储层的分配方法时，其以大块大块的方式申请的内存，存储层的作用是将内存分配的方式对堆层透明化。
如下图为PHP内存管理器：

