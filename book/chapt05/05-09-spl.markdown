# 标准类

SPL，PHP标准库（Standard PHP Library），从 PHP 5.0 开始内置的接口和类的集合，从 PHP5.3 开始逐渐成熟并成为内核组件的一部分。
但是由于其文档的稀少以及推行的力度不够，导致较多的PHP开发人员对其不了解，甚至闻所未闻。

SPL是为了解决典型问题而存在，为了实现一些有效的数据访问接口和类。
现在它包括对常规数据结构的访问，迭代器，异常处理，文件处理，数组处理和一些设计模式的实现。
这些在程序设计的世界中都是一些典型的问题，以这样一种标准库的方式实现可以在很大程度上减少代码的冗余和提高开发的效率。

SPL在PHP内核中以一个扩展的形式存在，在ext目录下有一个spl目录，这里存放了SPL的所有代码实现。
从文件名我们可以看出其基本的操作实体：异常、数组、文件……。与其它扩展相比，SPL扩展没有太多不同的地方，
它和json、date等扩展一起作为内置的模块（php_builtin_extensions）加载。
具体流程可以参考[<< 第一节 生命周期和Zend引擎 >>][php-life-cycle-and-zend-engine]。
在ext/spl目录中，有两个有些奇怪的目录：example和internal。
这里都是一些.inc文件，它们是以PHP代码的形式实现了SPL的一些类。
通过TODO文件中的说明，example中的.inc文件是即将实现的SPL，而internal目录中的.inc文件是已经实现了的SPL。
也许这个扩展的开发人员的开发过程是先用PHP把相关代码写好，然后再依葫芦画瓢，换成C语言实现这些功能。

SPL的代码结构和其它扩展一样，一个主文件spl.c，它包括模块初始化、请求初始化等扩展必须定义的方法，
所有函数的定义以及所有函数和类的注册。在函数中或类中需要调用的一些公用方法存储在spl_function.c或spl_engine.c文件中。

SPL提供了一系列的异常标准类，包括逻辑异常和运行时异常逻辑异常下又包括函数调用失败异常、数据域异常、参数异常、长度异常等子类；
运行时异常包括




[php-life-cycle-and-zend-engine]:         ?p=chapt02/02-01-php-life-cycle-and-zend-engine
